{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91935\\\\OneDrive\\\\Documents\\\\check\\\\src\\\\components\\\\dashboard\\\\Experience.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({\n  experience,\n  deleteExperience\n}) => {\n  const experiences = experience.map(exp => React.createElement(\"tr\", {\n    key: exp._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, exp.company), React.createElement(\"td\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, exp.title), React.createElement(\"td\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, exp.from), \" -\", ' ', exp.to === null ? ' Now' : React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, exp.to)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteExperience(exp._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Delete\"))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Experience Credentials\"), React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Company\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Years\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, experiences)));\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteExperience\n})(Experience);","map":{"version":3,"sources":["C:\\Users\\91935\\OneDrive\\Documents\\check\\src\\components\\dashboard\\Experience.js"],"names":["React","PropTypes","connect","Moment","deleteExperience","Experience","experience","experiences","map","exp","_id","company","title","from","to","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcF,EAAAA;AAAd,CAAD,KAAsC;AACvD,QAAMG,WAAW,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAAG,IACpC;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,GAAG,CAACE,OAAT,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,GAAG,CAACG,KAA7B,CAFF,EAGE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,GAAG,CAACI,IAAjC,CADF,QACoD,GADpD,EAEGJ,GAAG,CAACK,EAAJ,KAAW,IAAX,GACC,MADD,GAGC,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,GAAG,CAACK,EAAjC,CALJ,CAHF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACK,GAAG,CAACC,GAAL,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CADkB,CAApB;AAsBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQH,WAAR,CATF,CAFF,CADF;AAgBD,CAvCD;;AAyCAF,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,UAAU,EAAEL,SAAS,CAACe,KAAV,CAAgBC,UADP;AAErBb,EAAAA,gBAAgB,EAAEH,SAAS,CAACiB,IAAV,CAAeD;AAFZ,CAAvB;AAKA,eAAef,OAAO,CACpB,IADoB,EAEpB;AAAEE,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map(exp => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td className='hide-sm'>\n        <Moment format='DD/MM/YYYY'>{exp.from}</Moment> -{' '}\n        {exp.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format='DD/MM/YYYY'>{exp.to}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          className='btn btn-danger'\n          onClick={() => deleteExperience(exp._id)}\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <div>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </div>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  { deleteExperience }\n)(Experience);\n"]},"metadata":{},"sourceType":"module"}