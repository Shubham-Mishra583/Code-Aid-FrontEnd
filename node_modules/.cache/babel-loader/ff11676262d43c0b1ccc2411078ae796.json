{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILES, GET_GITHUB_REPOS, UPDATE_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, ACCOUNT_DELETED } from './types'; // Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n}; // Get all profiles\n\nexport const getAllProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n}; // Get profile by user id\n\nexport const getProfileById = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/user/\".concat(id));\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n}; // Get Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/github/\".concat(username));\n    dispatch({\n      type: GET_GITHUB_REPOS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatchProfileError(dispatch, error);\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  console.log(formData);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatchProfileError(dispatch, error);\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatchProfileError(dispatch, error);\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n\n    dispatchProfileError(dispatch, error);\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/experience/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/profile/education/\".concat(id));\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n}; // Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone!')) {\n    try {\n      await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been deleted'));\n    } catch (error) {\n      dispatchProfileError(dispatch, error);\n    }\n  }\n};\n\nconst dispatchProfileError = (dispatch, error) => {\n  console.log(error.response);\n  dispatch({\n    type: PROFILE_ERROR,\n    payload: {\n      msg: error.response.statusText,\n      status: error.response.status\n    }\n  });\n};","map":{"version":3,"sources":["C:\\Users\\91935\\OneDrive\\Documents\\check\\src\\actions\\profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","GET_GITHUB_REPOS","UPDATE_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","error","dispatchProfileError","getAllProfiles","getProfileById","id","getGithubRepos","username","console","log","response","errors","forEach","msg","createProfile","formData","history","edit","config","headers","post","push","addExperience","put","addEducation","deleteExperience","delete","deleteEducation","deleteAccount","window","confirm","statusText","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_GITHUB_REPOS,\n  UPDATE_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from './types';\n\n// Get current user profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Get all profiles\nexport const getAllProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Get profile by user id\nexport const getProfileById = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${id}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Get Github repos\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_GITHUB_REPOS,\n      payload: res.data,\n    });\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Create or update profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  console.log(formData);\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    console.log(error.response);\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => {\n        dispatch(setAlert(error.msg, 'danger'));\n      });\n    }\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Delete Experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Deleted', 'success'));\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Delete Education\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Deleted', 'success'));\n  } catch (error) {\n    dispatchProfileError(dispatch, error);\n  }\n};\n\n// Delete Account & Profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This cannot be undone!')) {\n    try {\n      await axios.delete(`/api/profile`);\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n      dispatch(setAlert('Your account has been deleted'));\n    } catch (error) {\n      dispatchProfileError(dispatch, error);\n    }\n  }\n};\n\nconst dispatchProfileError = (dispatch, error) => {\n  console.log(error.response);\n  dispatch({\n    type: PROFILE_ERROR,\n    payload: {\n      msg: error.response.statusText,\n      status: error.response.status,\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}