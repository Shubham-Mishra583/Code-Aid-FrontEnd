{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91935\\\\OneDrive\\\\Documents\\\\check\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { likePost, unlikePost, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  showActions,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  likePost,\n  unlikePost,\n  deletePost\n}) => React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/profile/\".concat(user),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, name))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  className: \"my-1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, text), React.createElement(\"p\", {\n  className: \"post-date\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Posted on \", React.createElement(Moment, {\n  format: \"DD/MM/YYYY HH:MM\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, date)), showActions && React.createElement(Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  onClick: () => likePost(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), likes.length > 0 && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, \" \", likes.length)), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-light\",\n  onClick: () => unlikePost(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), React.createElement(Link, {\n  to: \"/posts/\".concat(_id),\n  className: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Discussion\", ' ', comments.length > 0 && React.createElement(\"span\", {\n  className: \"comment-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, comments.length)), !auth.loading && user === auth.user._id && React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-danger\",\n  onClick: () => deletePost(_id),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n})))));\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  likePost: PropTypes.func.isRequired,\n  unlikePost: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  likePost,\n  unlikePost,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["C:\\Users\\91935\\OneDrive\\Documents\\check\\src\\components\\posts\\PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","likePost","unlikePost","deletePost","PostItem","showActions","auth","post","_id","text","name","avatar","user","likes","comments","date","length","loading","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { likePost, unlikePost, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  showActions,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  likePost,\n  unlikePost,\n  deletePost,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='DD/MM/YYYY HH:MM'>{date}</Moment>\n      </p>\n      {showActions && (\n        <Fragment>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={() => likePost(_id)}\n          >\n            <i className='fas fa-thumbs-up'></i>\n            {likes.length > 0 && <span> {likes.length}</span>}\n          </button>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={() => unlikePost(_id)}\n          >\n            <i className='fas fa-thumbs-down'></i>\n          </button>\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              type='button'\n              className='btn btn-danger'\n              onClick={() => deletePost(_id)}\n            >\n              <i className='fas fa-times'></i>\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  likePost: PropTypes.func.isRequired,\n  unlikePost: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(\n  mapStateToProps,\n  { likePost, unlikePost, deletePost }\n)(PostItem);\n"]},"metadata":{},"sourceType":"module"}