{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, CREATE_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Create a post\n\nexport const createPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post created', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Like a post\n\nexport const likePost = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/like/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Unike a post\n\nexport const unlikePost = id => async dispatch => {\n  try {\n    const res = await axios.put(\"/api/posts/unlike/\".concat(id));\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Delete a post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(\"/api/posts/\".concat(id));\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post deleted', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/posts/\".concat(id));\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Add a comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts/comment/\".concat(postId), formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n}; // Remove a comment\n\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId));\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment removed', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\nconst dispatchPostError = (dispatch, error) => {\n  console.log(error.response);\n  dispatch({\n    type: POST_ERROR,\n    payload: {\n      msg: error.response.statusText,\n      status: error.response.status\n    }\n  });\n};","map":{"version":3,"sources":["C:\\Users\\91935\\OneDrive\\Documents\\check\\src\\actions\\post.js"],"names":["axios","setAlert","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","CREATE_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","error","dispatchPostError","createPost","formData","config","headers","post","likePost","id","put","likes","unlikePost","deletePost","delete","getPost","addComment","postId","removeComment","commentId","console","log","response","msg","statusText","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  CREATE_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Create a post\nexport const createPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(`/api/posts`, formData, config);\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post created', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Like a post\nexport const likePost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Unike a post\nexport const unlikePost = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Delete a post\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n    dispatch(setAlert('Post deleted', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Add a comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment added', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\n// Remove a comment\nexport const removeComment = (postId, commentId) => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment removed', 'success'));\n  } catch (error) {\n    dispatchPostError(dispatch, error);\n  }\n};\n\nconst dispatchPostError = (dispatch, error) => {\n  console.log(error.response);\n  dispatch({\n    type: POST_ERROR,\n    payload: {\n      msg: error.response.statusText,\n      status: error.response.status,\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}